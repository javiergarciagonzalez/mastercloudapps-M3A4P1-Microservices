version: '3'
services:
  orderservice:
    build:
      context: ./order-service/
      args:
        baseImageVersion: ${EVENTUATE_JAVA_BASE_IMAGE_VERSION?}
    ports:
      - "8081:8080"
    depends_on:
      - postgres
      - kafka
      - zookeeper
      - cdcservice
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/eventuate
      SPRING_DATASOURCE_USERNAME: eventuate
      SPRING_DATASOURCE_PASSWORD: eventuate
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181

  customerservice:
    build:
      context: ./customer-service/
      args:
        baseImageVersion: ${EVENTUATE_JAVA_BASE_IMAGE_VERSION?}
    ports:
      - "8082:8080"
    depends_on:
      - postgres
      - kafka
      - zookeeper
      - cdcservice
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/eventuate
      SPRING_DATASOURCE_USERNAME: eventuate
      SPRING_DATASOURCE_PASSWORD: eventuate
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
  
    productservice:
    build:
      context: ./product-service/
      args:
        baseImageVersion: ${EVENTUATE_JAVA_BASE_IMAGE_VERSION?}
    ports:
      - "8084:8080"
    depends_on:
      - postgres
      - kafka
      - zookeeper
      - cdcservice
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/eventuate
      SPRING_DATASOURCE_USERNAME: eventuate
      SPRING_DATASOURCE_PASSWORD: eventuate
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181

  apigateway:
    build:
      context: ./api-gateway/
      args:
        baseImageVersion: ${EVENTUATE_JAVA_BASE_IMAGE_VERSION?}
    ports:
      - "8083:8080"
    environment:
      ORDER_DESTINATIONS_ORDERSERVICEURL: http://orderservice:8080
      CUSTOMER_DESTINATIONS_CUSTOMERSERVICEURL: http://customerservice:8080
      JAVA_OPTS: -Ddebug
      APIGATEWAY_TIMEOUT_MILLIS: ${APIGATEWAY_TIMEOUT_MILLIS:-1000}

  zookeeper:
    image: confluentinc/cp-zookeeper:5.2.4
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      KAFKA_HEAP_OPTS: -Xmx64m

  kafka:
    image: "confluentinc/cp-kafka:5.2.4"
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_LISTENERS: LC://kafka:29092,LX://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: LC://kafka:29092,LX://${DOCKER_HOST_IP:-localhost}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LC:PLAINTEXT,LX:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LC
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: -Xmx192m


  postgres:
    image: eventuateio/eventuate-tram-sagas-postgres:$EVENTUATE_SAGA_VERSION
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: eventuate
      POSTGRES_PASSWORD: eventuate

  cdcservice:
    image: eventuateio/eventuate-cdc-service:$EVENTUATE_CDC_VERSION
    ports:
      - "8099:8080"
    depends_on:
      - postgres
      - kafka
      - zookeeper
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/eventuate
      SPRING_DATASOURCE_USERNAME: eventuate
      SPRING_DATASOURCE_PASSWORD: eventuate
      SPRING_DATASOURCE_TEST_ON_BORROW: "true"
      SPRING_DATASOURCE_VALIDATION_QUERY: SELECT 1
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      EVENTUATELOCAL_CDC_READER_NAME: PostgresPollingReader
      SPRING_PROFILES_ACTIVE: EventuatePolling
      JAVA_OPTS: -Xmx64m
